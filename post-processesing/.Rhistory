?plotcluster
nxes$clusters
col_classes=c("double", "character", "character", "integer", "character", "integer", "character", "integer", "character", "integer", "integer", "character", "integer", "character", "integer", "integer", "character")
col_names=c("ts", "uid", "query", "qytype", "qtype_name", "qlen", "tld", "tld_len", "subs", "subs_c", "sub_len", "domain", "domain_len", "domain_uchars", "domain_uchars_c", "domain_grams_c", "domain_grams", "domain_entropy")
nxes<-read.table("nxes.log", sep="\t", col.names=col_names, na.strings="-", colClasses=col_classes, comment.char="#")
k_frame<-scale(data.frame(nxes$qlen, nxes$tld_len, nxes$subs_c, nxes$sub_len, nxes$domain_len, nxes$domain_uchars_c, nxes$domain_grams_c, nxes$domain_entropy))
k_dat<-kmeans(k_frame, centers=3)
nxes$cluster<-k_dat$cluster
nxes$cluster
dbs<-dbscan(k_frame, .2)
plot(k_frame[dbs$cluster %in% 1:3,])
plot(k_frame, dbs$cluster)
dbs
dbs$cluster
dbs<-dbscan(k_frame, .5)
dbs$cluster
dbs<-dbscan(k_frame, .5)
plot(k_frame, dbs$cluster)
plt(k_frame)
plot(k_frame)
plot(k_frame)
dbs<-dbscan(k_frame, .5, showplot=2)
k_frame
princomp(k_frame)
pairs(k_frame)
pairs(nxes)
library(cluster)
# read in data and properly label
col_classes=c("double", "character", "character", "integer", "character", "integer", "character", "integer", "character", "integer", "integer", "character", "integer", "character", "integer", "integer", "character")
col_names=c("ts", "uid", "query", "qytype", "qtype_name", "qlen", "tld", "tld_len", "subs", "subs_c", "sub_len", "domain", "domain_len", "domain_uchars", "domain_uchars_c", "domain_grams_c", "domain_grams", "domain_entropy")
nxes<-read.table("nxes.log", sep="\t", col.names=col_names, na.strings="-", colClasses=col_classes, comment.char="#")
# create scaled data frame of measurable data
nx_dat<-scale(data.frame(nxes$qlen, nxes$tld_len, nxes$subs_c, nxes$sub_len, nxes$domain_len, nxes$domain_uchars_c, nxes$domain_grams_c, nxes$domain_entropy))
# identify variables that are highly coordinated
pairs(nx_dat)
nx_pca<-princomp(nx_dat, scores=T, cor=T)
summary(nx_pca)
plot(nx_pca)
?biplot
biplot(nx_pca)
